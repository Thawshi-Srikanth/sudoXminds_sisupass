definitions:
  services.ActivateUserRequest:
    properties:
      token:
        type: string
    type: object
  services.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  services.UpdatePasswordRequest:
    properties:
      password:
        type: string
      token:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/activate:
    put:
      consumes:
      - application/json
      description: Activate a user account using the activation token sent via email
      parameters:
      - description: Activation token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.ActivateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User activated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Edit conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Validation failed
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Activate user account
      tags:
      - Authentication
  /api/v1/auth/google/callback:
    get:
      description: Process Google OAuth callback and authenticate user
      parameters:
      - description: OAuth state parameter
        in: query
        name: state
        required: true
        type: string
      - description: OAuth authorization code
        in: query
        name: code
        required: true
        type: string
      responses:
        "307":
          description: Redirect to frontend with auth token
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Handle Google OAuth callback
      tags:
      - Authentication
  /api/v1/auth/google/login:
    get:
      description: Redirect user to Google OAuth consent screen
      responses:
        "307":
          description: Redirect to Google OAuth
          schema:
            type: string
      summary: Initiate Google OAuth login
      tags:
      - Authentication
  /api/v1/auth/password:
    put:
      consumes:
      - application/json
      description: Update a user's password using the password reset token sent via
        email
      parameters:
      - description: Password reset data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Edit conflict
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Validation failed
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update user password
      tags:
      - Authentication
  /api/v1/auth/password-reset:
    post:
      consumes:
      - application/json
      description: Send a password reset email to the specified email address
      parameters:
      - description: Email address
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "202":
          description: Password reset email sent
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Validation failed
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Send password reset email
      tags:
      - Authentication
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get user information by email address
      parameters:
      - description: User email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Validation failed
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get user by email
      tags:
      - Users
  /api/v1/users/register:
    post:
      consumes:
      - application/json
      description: Register a new user account and send activation email
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Validation failed
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Register new user
      tags:
      - Users
  /health:
    get:
      description: Check API health and system status
      produces:
      - application/json
      responses:
        "200":
          description: API is healthy
          schema:
            additionalProperties: true
            type: object
      summary: Health check
      tags:
      - System
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
